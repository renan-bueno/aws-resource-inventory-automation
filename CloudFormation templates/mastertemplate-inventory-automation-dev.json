{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "LambdaS3Bucket": {
      "Type": "String",
      "Default": "swo-inventory-automation",
      "Description": "S3 bucket for Lambda function code"
    },

    "EC2BucketArn": {
      "Type": "String",
      "Default": "arn:aws:s3:::your-ec2-bucket-name/*",
      "Description": "S3 bucket ARN for EC2 Lambda execution role"
    },

    "RDSBucketArn": {
      "Type": "String",
      "Default": "arn:aws:s3:::your-rds-bucket-name/*",
      "Description": "S3 bucket ARN for RDS Lambda execution role"
    },

    "S3BucketArn": {
      "Type": "String",
      "Default": "arn:aws:s3:::your-s3-bucket-name/*",
      "Description": "S3 bucket ARN for S3 Lambda execution role"
    }
  },
  "Resources": {
    "SQSQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "SQSQueue",
        "VisibilityTimeout": 30
      }
    },

    "EventBridgeSQSPolicy": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Action": "sqs:SendMessage",
              "Resource": { "Fn::GetAtt": ["SQSQueue", "Arn"] }
            }
          ]
        },
        "Queues": [{ "Ref": "SQSQueue" }]
      }
    },

    "EventBridgeSchedule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "EventBridgeSchedule",
        "Description": "Scheduled event to trigger SQS queue",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": { "Fn::GetAtt": ["SQSQueue", "Arn"] },
            "Id": "SQSQueue"
          }
        ]
      }
    },

    "EC2LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "EC2LambdaExecutionRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "EC2LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeInstances",
                    "ec2:DescribeImages",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:PutObject",
                  "Resource": { "Ref": "EC2BucketArn" }
                }
              ]
            }
          }
        ]
      }
    },

    "RDSLambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "RDSLambdaExecutionRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "RDSLambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeInstances",
                    "ec2:DescribeImages",
                    "rds:DescribeDBInstances",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:PutObject",
                  "Resource": { "Ref": "RDSBucketArn" }
                }
              ]
            }
          }
        ]
      }
    },

    "S3LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "S3LambdaExecutionRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "S3LambdaExecutionPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:ListBucket",
                    "s3:GetBucketLocation",
                    "s3:GetObjectAttributes",
                    "s3:GetObject",
                    "s3:GetLifecycleConfiguration",
                    "s3:GetBucketPublicAccessBlock",
                    "s3:GetAccountPublicAccessBlock",
                    "s3:ListAllMyBuckets",
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "s3:PutObject",
                  "Resource": { "Ref": "S3BucketArn" }
                },
                {
                  "Effect": "Allow",
                  "Action": "sts:GetCallerIdentity",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },

    "EC2LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "swo-inventory-automation",
          "S3Key": "EC2-Lambda-Metadata-Extraction.zip"
        },
        "FunctionName": "EC2LambdaFunction",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": ["EC2LambdaExecutionRole", "Arn"]
        },
        "Runtime": "python3.10",
        "Timeout": 30
      }
    },

    "RDSLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "swo-inventory-automation",
          "S3Key": "RDS-Lambda-Metadata-Extraction.zip"
        },
        "FunctionName": "RDSLambdaFunction",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": ["RDSLambdaExecutionRole", "Arn"]
        },
        "Runtime": "python3.10",
        "Timeout": 30
      }
    },

    "S3LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "swo-inventory-automation",
          "S3Key": "S3-Lambda-Metadata-Extraction.zip"
        },
        "FunctionName": "S3LambdaFunction",
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": ["S3LambdaExecutionRole", "Arn"]
        },
        "Runtime": "python3.10",
        "Timeout": 30
      }
    },

    "EC2LambdaEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "EventSourceArn": { "Fn::GetAtt": ["SQSQueue", "Arn"] },
        "FunctionName": { "Ref": "EC2LambdaFunction" },
        "Enabled": true,
        "BatchSize": 5
      }
    },

    "RDSLambdaEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "EventSourceArn": { "Fn::GetAtt": ["SQSQueue", "Arn"] },
        "FunctionName": { "Ref": "RDSLambdaFunction" },
        "Enabled": true,
        "BatchSize": 5
      }
    },

    "S3LambdaEventSourceMapping": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "EventSourceArn": { "Fn::GetAtt": ["SQSQueue", "Arn"] },
        "FunctionName": { "Ref": "S3LambdaFunction" },
        "Enabled": true,
        "BatchSize": 5
      }
    }
  }
}
